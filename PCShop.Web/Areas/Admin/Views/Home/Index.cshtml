@using static PCShop.GCommon.ApplicationConstants
@using PCShop.Web.ViewModels.Admin
@model DeletedProductsListViewModel

@{
    ViewData["Title"] = "Deleted Products";
    string heading = "Deleted Products";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">@heading</h2>
        <div class="btn-group">
            <a asp-area="Admin" asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-box"></i> Active Products
            </a>
            <a asp-area="Admin" asp-controller="Product" asp-action="Deleted" class="btn btn-primary">
                <i class="fas fa-trash-alt"></i> Deleted Products
            </a>
        </div>
    </div>

    <hr class="mb-4" />

    <div class="row g-4">
        @if (Model == null || Model.Products == null || !Model.Products.Any())
        {
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <h5 class="mb-0">No deleted products found.</h5>
                </div>
            </div>
        }
        else
        {
            foreach (var product in Model.Products)
            {
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="card h-100 border-danger shadow-sm">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" class="card-img-top p-2" style="max-height: 160px; object-fit: contain;" alt="@product.Name" />
                        }
                        else
                        {
                            <img src="~/images/no-image.jpg" class="card-img-top p-2" style="max-height: 160px; object-fit: contain;" alt="No Image Available" />
                        }

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-truncate">@product.Name</h5>
                            <p class="card-text mb-1 text-danger fw-semibold"><i class="fas fa-trash"></i> Deleted</p>
                            <p class="card-text mb-1">Category: <span class="fw-medium">@product.ProductType</span></p>
                            <p class="card-text mb-3"><strong>Price:</strong> @product.Price €</p>

                            <div class="mt-auto d-grid gap-2">
                                <form asp-area="Admin" asp-controller="Product" asp-action="Restore" method="post">
                                    <input type="hidden" name="id" value="@product.Id" />
                                    <button type="submit" class="btn btn-outline-success btn-sm w-100">
                                        <i class="fas fa-undo"></i> Restore
                                    </button>
                                </form>

                                <form asp-area="Admin" asp-controller="Product" asp-action="HardDelete" method="post">
                                    <input type="hidden" name="id" value="@product.Id" />
                                    <button type="submit" class="btn btn-outline-danger btn-sm w-100" onclick="return confirm('Are you sure you want to delete permanently?');">
                                        <i class="fas fa-trash"></i> Delete Permanently
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Pagination -->
    @if (Model != null && Model.TotalProducts > Model.ProductsPerPage)
    {
        int totalPages = (int)Math.Ceiling((double)Model.TotalProducts / Model.ProductsPerPage);
        int currentPage = Model.CurrentPage;

        <nav aria-label="Deleted product pagination" class="mt-5">
            <ul class="pagination justify-content-center">

                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" asp-route-currentPage="@(currentPage - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-route-currentPage="@i">@i</a>
                    </li>
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" asp-route-currentPage="@(currentPage + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>

            </ul>
        </nav>
    }
</div>
