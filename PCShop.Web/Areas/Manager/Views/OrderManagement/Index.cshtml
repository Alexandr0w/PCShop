@using PCShop.Web.ViewModels.Manager
@model ManagerOrdersPageViewModel

@{
    ViewData["Title"] = "Manage Orders";
}

<h2 class="mt-4">Manage Orders</h2>
<hr />

<!-- Filter Form (separate from archive form) -->
<div class="row g-2 mb-4">
    <div class="col-md-4">
        <select name="statusFilter" class="form-select" onchange="location.href='@Url.Action("Index", new { statusFilter = "__STATUS__" })'.replace('__STATUS__', this.value)">
            <option value="">-- All Statuses --</option>
            @foreach (var status in Model.AllStatuses)
            {
                <option value="@status" selected="@(Model.CurrentStatusFilter == status)">
                    @status
                </option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <button type="button" class="btn btn-outline-secondary w-100" onclick="archiveSelected()">
            <i class="fas fa-archive"></i> Archive Selected
        </button>
    </div>
</div>

@if (!Model.Orders.Any())
{
    <div class="alert alert-info">
        @if (!string.IsNullOrEmpty(Model.CurrentStatusFilter))
        {
            <span>No orders found with status: <strong>@Model.CurrentStatusFilter</strong></span>
        }
        else
        {
            <span>No orders found.</span>
        }
    </div>
}
else
{
    <!-- Orders Table (outside of any form) -->
    <table class="table table-bordered table-striped mt-3">
        <thead>
            <tr class="text-center">
                <th><input type="checkbox" id="select-all" onclick="toggleAll(this)" /></th>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Total Price</th>
                <th>Order Date</th>
                <th>Delivery Method</th>
                <th>Status</th>
                <th>Send Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.Orders)
            {
                <tr class="text-center">
                    <td>
                        <input type="checkbox" name="selectedOrderIds" value="@order.Id" class="order-checkbox" />
                    </td>
                    <td>@order.Id</td>
                    <td>@order.CustomerName</td>
                    <td>@order.TotalPrice.ToString("F2") €</td>
                    <td>@order.OrderDate</td>
                    <td>@order.DeliveryMethod</td>
                    <td>
                        <span class="badge bg-@(order.Status == "Completed" ? "warning text-white" : order.Status == "Sent" ? "success" : order.Status == "Archived" ? "secondary" : "info")">
                            @order.Status
                        </span>
                    </td>
                    <td>
                        @if (!string.IsNullOrWhiteSpace(order.SendDate))
                        {
                            @order.SendDate
                        }
                        else
                        {
                            <span class="text-muted">—</span>
                        }
                    </td>
                    <td>
                        @if (order.Status == "Completed")
                        {
                            @using (Html.BeginForm("Approve", "OrderManagement", new { area = "Manager" }, FormMethod.Post))
                            {
                                <input type="hidden" name="orderId" value="@order.Id" />
                                <button type="submit" class="btn btn-sm btn-success" onclick="return confirm('Are you sure you want to approve this order?');">
                                    <i class="fas fa-check-circle"></i> Approve
                                </button>
                            }
                        }
                        else if (order.Status == "Sent")
                        {
                            <span class="text-success">
                                <i class="fas fa-check-circle"></i> Approved
                            </span>
                        }
                        else if (order.Status == "Pending" && order.DeliveryMethod == "None")
                        {
                            @using (Html.BeginForm("Delete", "OrderManagement", new { area = "Manager" }, FormMethod.Post, false, new { onsubmit = "return confirm('Are you sure you want to delete this order?');" }))
                            {
                                <input type="hidden" name="orderId" value="@order.Id" />
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </button>
                            }
                        }
                        else if (order.Status == "Archived" && !string.IsNullOrWhiteSpace(order.SendDate))
                        {
                            <span class="text-success">
                                <i class="fas fa-check-circle"></i> Approved
                            </span>
                        }
                        else
                        {
                            <span class="text-muted">N/A</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Hidden form for archiving selected orders -->
<form id="archiveForm" asp-area="Manager" asp-controller="OrderManagement" asp-action="ArchiveSelected" method="post" style="display: none;">
    <div id="selectedOrdersContainer"></div>
</form>

<!-- Pagination -->
<nav aria-label="Order pagination">
    <ul class="pagination justify-content-center mt-4">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link"
               asp-action="Index"
               asp-route-currentPage="@(Model.CurrentPage - 1)"
               asp-route-statusFilter="@Model.CurrentStatusFilter">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            bool isActive = (i == Model.CurrentPage);
            <li class="page-item @(isActive ? "active" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-currentPage="@i"
                   asp-route-statusFilter="@Model.CurrentStatusFilter">
                    @i
                </a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link"
               asp-action="Index"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-statusFilter="@Model.CurrentStatusFilter">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>

@section Scripts {
    <script>
        function toggleAll(source) {
            const checkboxes = document.getElementsByClassName('order-checkbox');
            for (let i = 0; i < checkboxes.length; i++) {
                checkboxes[i].checked = source.checked;
            }
        }

        function archiveSelected() {
            const checkboxes = document.getElementsByClassName('order-checkbox');
            const selectedIds = [];

            for (let i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    selectedIds.push(checkboxes[i].value);
                }
            }

            if (selectedIds.length === 0) {
                alert('Please select at least one order to archive.');
                return;
            }

            if (confirm('Are you sure you want to archive the selected orders?')) {
                const container = document.getElementById('selectedOrdersContainer');
                container.innerHTML = '';

                selectedIds.forEach(function(id) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'selectedOrderIds';
                    input.value = id;
                    container.appendChild(input);
                });

                document.getElementById('archiveForm').submit();
            }
        }
    </script>
}